// Contract for setting up a network for an inner planet.
//   Author: nightingale

CONTRACT_TYPE:NEEDS[RemoteTech]
{
    name = RT_InnerPlanetRelay

    sortKey = "03." + @targetBody.Index().ToString("D2")

    title = Create a network for @targetBody
    description = @isMoho ? @descMoho : @isDuna ? @descDuna : @isEve ? @descEve : @isVenus ? @descVenus : @descDefault
    synopsis = Build a communication network that provides coverage of @targetBody with a link back to mission control.
    completedMessage = The network is up and transmitting, and our shake-out testing is complete!

    group = RemoteTech

    // Level 2 prestige
    prestige = Significant

    targetBody = @targetPlanet

    // Always offered by CommSat Group
    agent = Communication Satellite Group

    // Can only do this contract once
    maxCompletions = 1

    // Contract rewards
    rewardReputation = 1.0
    rewardFunds = @advanceFunds * 3.0
    advanceFunds = 70000.0
    
    DATA
    {
        type = double

        sma = HomeWorld().SemiMajorAxis()
        targetSMA = @sma * 1.55
    }

    DATA
    {
        type = string

        descDefault = We'd like to know more about @targetBody.  Set up a communication network for us.
        descMoho = We'd like to find out if our probes can survive the temperatures on @targetBody.  Set up a communication network for us.
        descDuna = We'd like to know if our rover wheels will actually work on @targetBody.  Set up a communication network for us.
        descEve = We'd like to know if our antennas are powerful enough to get through Eve's purple clouds.  Set up a communication network for us.
        descVenus = We'd like to know if our antennas are powerful enough to get through to the surface of Venus.  Set up a communication network for us.
    }

    DATA_EXPAND
    {
        type = CelestialBody

        //targetPlanet = AllBodies().Where(cb => cb.SemiMajorAxis() < @targetSMA && cb.IsPlanet() && cb.Children().Count() < 3 && cb != HomeWorld())
		targetPlanet = [ Moho, Eve, Duna, Dres, Jool ]
    }

    DATA
    {
        type = bool

        isMoho = @targetPlanet.Name() == "Moho" || @targetPlanet.Name() == "Mercury"
        isDuna = @targetPlanet.Name() == "Duna" || @targetPlanet.Name() == "Mars"
        isEve = @targetPlanet.Name() == "Eve"
        isVenus = @targetPlanet.Name() == "Venus"
    }

    PARAMETER
    {
        name = CoverageParameter
        type = CelestialBodyCoverage

        targetBody = @/targetPlanet

        coverage = 0.95
    }

    PARAMETER
    {
        name = Duration
        type = Duration

        duration = 7d

        preWaitText = Testing time after network up
        waitingText = Performing shake-out testing
        completionText = Shake-out testing completed
    }

    REQUIREMENT
    {
        name = CelestialBodyCoverage
        type = CelestialBodyCoverage

        targetBody = HomeWorld()

        minCoverage = 0.7
        maxCoverage = 1.0
    }

    REQUIREMENT
    {
        name = CommDish
        type = Any

        REQUIREMENT
        {
            name = PartUnlocked1
            type = PartUnlocked

            part = commDish
        }

        REQUIREMENT
        {
            name = PartUnlocked2
            type = PartUnlocked

            part = RTLongDish2
        }
    }

    REQUIREMENT
    {
        name = PartModuleTypeUnlocked
        type = PartModuleTypeUnlocked

        partModuleType = Antenna
        partModuleType = Generator
    }

    REQUIREMENT
    {
        type = CelestialBodyCoverage

        maxCoverage = 0.7
    }
}
